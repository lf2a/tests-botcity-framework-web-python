name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ 3.8 ]
        browser: [ firefox, chrome, edge ]

    steps:
      - uses: actions/checkout@v2


      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Chocolatey
        if: matrix.os == 'windows-latest'
        run: |
        "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"
        choco upgrade chocolatey

      - name: Install Test Dependencies
        run: pip install -r requirements.txt

      - name: Install MSEdge Tools 3.141.3
        if: matrix.browser == 'edge'
        run: pip install msedge-selenium-tools==3.141.3

      - name: Changing permissions
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'chrome'
        run: sudo chmod 755 web-drivers/chromedriver

      - name: Changing permissions
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'firefox'
        run: sudo chmod 755 web-drivers/geckodriver

      - name: Changing permissions
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'edge'
        run: sudo chmod 755 web-drivers/msedgedriver

      - name: Set up Chrome Ubuntu
        if: matrix.browser == 'chrome'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Set up Chrome Windows
        if: matrix.os == 'windows-latest'
        run: choco install googlechrome

      - name: Set up Firefox Ubuntu
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'firefox'
        uses: browser-actions/setup-firefox@latest

      - name: Set up Firefox Windows
        if: matrix.os == 'windows-latest'
        run: choco install firefox

      - name: Set up Edge # works only ubuntu
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'edge'
        run: |
          sudo apt install wget software-properties-common apt-transport-https
          sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
          sudo apt update
          sudo apt install microsoft-edge-stable

      - name: Set up Edge # works only windows
        if: matrix.os == 'windows-latest' && matrix.browser == 'edge'
        uses: browser-actions/setup-edge@latest

      - name: Test Browser actions
        if: matrix.browser != 'edge'
        run: pytest test_browser.py --browser=${{ matrix.browser }} --headless

      - name: Test Keyboard
        if: matrix.browser != 'edge'
        run: pytest test_keyboard.py --browser=${{ matrix.browser }} --headless

      - name: Test Mouse
        if: matrix.browser != 'edge'
        run: pytest test_mouse.py --browser=${{ matrix.browser }} --headless

      - name: Test Vision
        if: matrix.browser != 'edge'
        run: pytest test_vision.py --browser=${{ matrix.browser }} --headless
