name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ macos-latest ]
        #        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ 3.8 ]
        browser: [ edge ]
#        browser: [ firefox, chrome, edge ]

    steps:
      - uses: actions/checkout@v2


      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

#      - name: Set up Chocolatey
#        if: matrix.os == 'windows-latest'
#        uses: crazy-max/ghaction-chocolatey@v1.6.0
#        with:
#          args: -h

      - name: Set up Homebrew
        if: matrix.os == 'macos-latest'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew --version

      - name: Install Test Dependencies
        run: pip install -r requirements.txt

      - name: Install MSEdge Tools 3.141.3
        if: matrix.browser == 'edge'
        run: pip install msedge-selenium-tools==3.141.3

#      - name: Changing permissions
#        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'chrome'
#        run: sudo chmod 755 web-drivers/linux/chromedriver

      - name: Changing permissions
        if: matrix.os == 'macos-latest' && matrix.browser == 'chrome'
        run: chmod 755 web-drivers/macos/chromedriver

#
#      - name: Changing permissions
#        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'firefox'
#        run: sudo chmod 755 web-drivers/linux/geckodriver

      - name: Changing permissions
        if: matrix.os == 'macos-latest' && matrix.browser == 'firefox'
        run: chmod 755 web-drivers/macos/geckodriver
#
#      - name: Changing permissions
#        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'edge'
#        run: sudo chmod 755 web-drivers/linux/msedgedriver

      - name: Changing permissions
        if: matrix.os == 'macos-latest' && matrix.browser == 'edge'
        run: chmod 755 web-drivers/macos/msedgedriver
#
#      - name: Set up Chrome Ubuntu
#        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'chrome'
#        uses: browser-actions/setup-chrome@latest
#        with:
#          chrome-version: stable
#
#      - name: Set up Chrome Windows
#        if: matrix.os == 'windows-latest' && matrix.browser == 'chrome'
#        run: choco install googlechrome

      - name: Set up Chrome MacOS
        if: matrix.os == 'macos-latest' && matrix.browser == 'chrome'
        run: brew install --cask google-chrome
#
#      - name: Set up Firefox Ubuntu
#        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'firefox'
#        uses: browser-actions/setup-firefox@latest
#
#      - name: Set up Firefox Windows
#        if: matrix.os == 'windows-latest' && matrix.browser == 'firefox'
#        run: choco install firefox

      - name: Set up Firefox MacOS
        if: matrix.os == 'macos-latest' && matrix.browser == 'firefox'
        run: brew install --cask firefox
#
#      - name: Set up Edge # works only ubuntu
#        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'edge'
#        run: |
#          sudo apt install wget software-properties-common apt-transport-https
#          sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
#          sudo apt update
#          sudo apt install microsoft-edge-stable
#
#      - name: Set up Edge # works only windows
#        if: matrix.os == 'windows-latest' && matrix.browser == 'edge'
#        uses: browser-actions/setup-edge@latest

      - name: Set up Edge MacOS
        if: matrix.os == 'macos-latest' && matrix.browser == 'edge'
        run: brew install --cask microsoft-edge
#
      - name: Test Browser actions
#        if: matrix.browser != 'edge' || matrix.os == 'windows-latest'
        run: pytest test_browser.py --browser=${{ matrix.browser }} --headless
#
#      - name: Test Keyboard
#        if: matrix.browser != 'edge' || matrix.os == 'windows-latest'
#        run: pytest test_keyboard.py --browser=${{ matrix.browser }} --headless
#
#      - name: Test Mouse
#        if: matrix.browser != 'edge' || matrix.os == 'windows-latest'
#        run: pytest test_mouse.py --browser=${{ matrix.browser }} --headless
#
#      - name: Test Vision
#        if: matrix.browser != 'edge' || matrix.os == 'windows-latest'
#        run: pytest test_vision.py --browser=${{ matrix.browser }} --headless
